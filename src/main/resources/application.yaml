my:
  keycloack:
    realm:
      name: financial-app
      issuer-uri: http://localhost:9080/realms/financial-app
    client:
      id: ms_financial
      secret: 4Zxr6n5ekIH8P8eNbekivvBlbbOrSkGK

keycloak:
  realm: financial-app
  resource: ms_financial
  auth-server-url: http://localhost:9080
#  ssl-required: external
#  credentials:
#    secret: 4Zxr6n5ekIH8P8eNbekivvBlbbOrSkGK
  #principal-attribute: client_credencials


spring:
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      dll-auto: create-drop
      naming:     
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
  datasource:
    url: jdbc:mysql://localhost:3306/financial_app?useTimezone=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${my.keycloack.realm.issuer-uri}
          jwk-set-uri: ${my.keycloack.realm.issuer-uri}/protocol/openid-connect/certs
conta:
  abertura:
    valorMinimo: 50

microservice:
  depositar:
    url: "http://localhost:8081/"

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      minimumNumberOfCalls: 5
      waitDurationInOpenState: 20s
      failureRateThreshold: 15
    instances:
      ms-central-bank-cb:
        baseConfig: default

logging:
  level:
    org:
      springframework:
        security: DEBUG

transacao:
  queue:
    name: q.centralbank.notificacaotransacao
    error: q.centralbank.notificacaotransacao.err
    wait: q.centralbank.notificacaotransacao.wait
  exchange:
    name: x.centralbank.notificacaotransacao
    error: x.centralbank.notificacaotransacao.err
    wait: x.centralbank.notificacaotransacao.wait